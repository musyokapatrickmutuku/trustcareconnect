{
  "name": "trustcareconnect",
  "version": "1.0.0",
  "description": "âœ… PRODUCTION-READY: AI-driven healthcare communication platform with human oversight - Fully deployed and tested end-to-end",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:ai-proxy\" \"npm run dev:frontend\"",
    "dev:backend": "cd packages/backend && dfx start --background && dfx deploy",
    "dev:ai-proxy": "cd packages/ai-proxy && npm run dev",
    "dev:frontend": "cd packages/frontend && npm start",
    "build": "npm run build:backend && npm run build:ai-proxy && npm run build:frontend",
    "build:backend": "cd packages/backend && dfx build",
    "build:ai-proxy": "cd packages/ai-proxy && npm run build",
    "build:frontend": "cd packages/frontend && npm run build",
    "test": "npm run test:backend && npm run test:ai-proxy && npm run test:frontend",
    "test:backend": "cd packages/backend && ./tests/integration/canister.test.sh",
    "test:ai-proxy": "cd packages/ai-proxy && npm test",
    "test:frontend": "cd packages/frontend && npm run test:ci",
    "test:coverage": "npm run test:frontend -- --coverage && npm run test:ai-proxy -- --coverage",
    "test:watch": "npm run test:frontend -- --watch",
    "lint": "npm run lint:backend && npm run lint:ai-proxy && npm run lint:frontend",
    "lint:backend": "echo 'Backend: Motoko linting via dfx check' && cd packages/backend && dfx check",
    "lint:ai-proxy": "cd packages/ai-proxy && npm run lint",
    "lint:frontend": "cd packages/frontend && npm run lint",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "clean": "rm -rf packages/*/node_modules packages/*/build packages/*/dist",
    "setup": "npm install && npm run setup:packages",
    "setup:packages": "npm run setup:ai-proxy && npm run setup:frontend",
    "setup:ai-proxy": "cd packages/ai-proxy && npm install",
    "setup:frontend": "cd packages/frontend && npm install",
    "deploy:local": "npm run build && npm run deploy:local:backend && npm run deploy:local:ai-proxy",
    "deploy:local:backend": "cd packages/backend && dfx deploy --network local",
    "deploy:local:ai-proxy": "cd packages/ai-proxy && npm run start",
    "deploy:production": "npm run build && npm run deploy:prod:backend && npm run deploy:prod:ai-proxy && npm run deploy:prod:frontend",
    "deploy:prod:backend": "cd packages/backend && dfx deploy --network ic",
    "deploy:prod:ai-proxy": "echo 'Production AI proxy deployment not configured'",
    "deploy:prod:frontend": "echo 'Production frontend deployment not configured'",
    "test:workflow": "npm run test:backend && npm run test:ai-proxy && npm run test:frontend"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^25.0.8",
    "@rollup/plugin-node-resolve": "^15.3.1",
    "@types/node": "^24.2.1",
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.0",
    "prettier": "^3.0.0",
    "rollup": "^3.29.5",
    "tslib": "^2.8.1"
  },
  "dependencies": {
    "@dfinity/agent": "^3.2.2",
    "@dfinity/auth-client": "^3.2.1",
    "@dfinity/candid": "^3.2.2",
    "@dfinity/identity": "^3.2.1",
    "@dfinity/principal": "^3.2.1",
    "@rollup/plugin-typescript": "^12.1.4",
    "azle": "^0.32.0",
    "isomorphic-fetch": "^3.0.0",
    "typescript": "^5.9.2"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/trustcareconnect.git"
  },
  "keywords": [
    "healthcare",
    "ai",
    "icp",
    "blockchain",
    "medical",
    "telemedicine",
    "javascript",
    "react",
    "medical-ai",
    "mvp"
  ],
  "author": "TrustCareConnect Team",
  "license": "MIT",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "prettier --write",
      "git add"
    ],
    "*.{json,md}": [
      "prettier --write",
      "git add"
    ]
  }
}
