# Promtail configuration for TrustCareConnect log collection
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # AI Proxy logs
  - job_name: ai-proxy
    static_configs:
      - targets:
          - localhost
        labels:
          job: ai-proxy
          service: trustcareconnect-ai-proxy
          environment: production
          __path__: /var/log/ai-proxy/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Frontend logs (if using log files)
  - job_name: frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: frontend
          service: trustcareconnect-frontend
          environment: production
          __path__: /var/log/nginx/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>\S+) \[(?P<time_local>.*)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>.*)" "(?P<http_user_agent>.*)"'
      - labels:
          method:
          status:
          path:
      - timestamp:
          source: time_local
          format: 02/Jan/2006:15:04:05 -0700

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
      - labels:
          stream:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: output

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+) (?P<hostname>\S+) (?P<service>\S+): (?P<message>.*)'
      - labels:
          hostname:
          service:
      - timestamp:
          source: timestamp
          format: Jan 2 15:04:05

  # Application specific logs from Docker volumes
  - job_name: trustcareconnect-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: trustcareconnect
          service: application
          __path__: /app/logs/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            component: component
      - labels:
          level:
          service:
          component:
      - timestamp:
          source: timestamp
          format: RFC3339

# Log processing pipeline for different log formats
pipeline_stages:
  # Common stages for all logs
  - match:
      selector: '{job="ai-proxy"}'
      stages:
        - json:
            expressions:
              level: level
              message: message
        - labels:
            level:
        # Drop debug logs in production
        - drop:
            expression: '.*level.*debug.*'
            older_than: 24h

  - match:
      selector: '{level="error"}'
      stages:
        # Add alert label for errors
        - labels:
            alert: "true"